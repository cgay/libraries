http://en.wikipedia.org/wiki/Parsing_expression_grammar

Files are pre-processed to resolve indentation and remove trailing spaces. Doing
this as a separate step means that indentation handling does not need a stack,
which means that caching parsers can be used without invalidating the cache all
the time. All tabs should be converted to spaces before parsing.

Primitive tokens are:
   INDENT   - A new indentation level.
   DEDENT   - A decrease to the previous indentation level.
   SPC      - Space character, not including LS.
   LS       - Optional spaces followed by Unicode LS/PS, CR, LF, CRLF.
   NUMBER   - One or more digits.
   ORDINAL  - Character in a progressive sequence (i.e. "a..z").
   CHAR     - Any character, including LS and SPC characters but not INDENT or
              DEDENT.
   Words & Symbols - Various string literals.

Indentation pre-processing works almost as described in the Python language
guide. Leading spaces on each line are left intact but are preceded by a number
of INDENT and DEDENT tokens.
   1) Indent stack starts with 0.
   2) A line is read.
   3) If leading spaces are greater than top of stack, they result in an INDENT
      token.
   4) If leading spaces equal top of stack, they are left alone.
   5) If leading spaces are less than top of stack, they result in DEDENT tokens
      until the matching count is reached. If there isn't a matching count, an
      INDENT token is generated to make up the difference.
   6) At end of input, DEDENT tokens are generated for any remaining
      indentation levels on the stack.

Strings are case-insensitive. There are no escape sequences; use '...' [unq]
for that effect.

Parsing constraints that I can't (or won't) express in the grammar:
   - Tables.
   - Some quote options are ignored in titles or other places.
   - Link names, words, and phrases could be further specified into topic
     titles, nicknames, and URLs.
    
Note that literal strings should be sorted from largest to smallest to reflect
the greedy parsing.

_____________
  DIVISIONS

markup-block:
   INDENT? markup-content DEDENT? SPC-LS* !CHAR
markup-content:
   topic-content? topic*

topic:
   directive-topic / titled-topic
directive-topic:
   topic-directive-title topic-content?
titled-topic:
   topic-title topic-content?
topic-content:
   ( section / footnote / division-content )+

section:
   directive-section / titled-section
directive-section:
   section-directive / paragraph-directive / link-directive / links-directive /
   word-directive / division-directive / null-directive
titled-section:
   section-title division-content?
section-directive:
   section-directive-title division-content?

footnote:
   [-SPC ( NUMBER / ORDINAL ) SPC-] ':' SPC+ division-content?

division-content:
   ( indented-content / !division-break content-block )+
division-break:
   topic-or-section-title / topic-directive-title / section-directive-title /
   directive-spec / footnote

indented-content:
   INDENT content-block+ DEDENT

remainder-and-indented-content:
   markup-words LS indented-content?

__________
  TITLES

topic-title:
   topic-or-section-title
section-title:
   topic-or-section-title

topic-directive-title:
   directive-spec-intro topic-directive-spec-text ':' SPC+ 
   title-words-til-midline-nickname ( ascii-midline SPC* )?
   ( LS / title-nickname ) ascii-underline?
section-directive-title:
   directive-spec-intro section-directive-spec-text ':' SPC+ 
   title-words-til-midline-nickname ( ascii-midline SPC* )?
   ( LS / title-nickname ) ascii-underline?

topic-or-section-title:
   title-midline-style / title-bare-style
title-midline-style:
   ascii-overline?
   ( title-line-midline-style-til-nickname* title-nickname-line-midline-style
   / title-line-midline-style+ )
   ascii-underline?
title-bare-style:
   ascii-overline?
   ( title-line-bare-style-til-nickname* title-nickname-line-bare-style
   / title-line-bare-style+ )
   ascii-underline
   
title-line-midline-style-til-nickname:
   !title-nickname-line-midline-style title-line-midline-style
title-line-bare-style-til-nickname:
   !title-nickname-line-bare-style title-line-bare-style
title-line-midline-style:
   SOL ascii-midline SPC+ title-words-til-midline ascii-midline? LS
title-line-bare-style:
   SOL title-words LS
title-nickname-line-midline-style:
   SOL ascii-midline SPC+ title-words-til-midline-nickname?
   ( ascii-midline SPC+ )? title-nickname
title-nickname-line-bare-style:
   SOL title-words-til-nickname? title-nickname

title-words:
   ( title-word SPC* )+
title-words-til-midline:
   ( !ascii-midline title-word SPC* )+
title-words-til-nickname:
   ( !title-nickname title-word SPC* )+
title-words-til-midline-nickname:
   ( !ascii-midline !title-nickname title-word SPC* )+
title-nickname:
   [-SPC nickname-word SPC-] LS

______________
  DIRECTIVES

paragraph-directive:
   paragraph-directive-spec markup-words? LS paragraph-directive-content?
link-directive:
   link-directive-spec link-line
links-directive:
   links-directive-spec link-words? LS indented-link-words?
word-directive:
   word-directive-spec word-line
division-directive:
   division-directive-spec division-content?
indented-content-directive:
   indented-content-directive-spec remainder-and-indented-content?
null-directive:
   null-directive-spec division-content?

directive-spec:
   paragraph-directive-spec / link-directive-spec / links-directive-spec /
   word-directive-spec / division-directive-spec / indented-content-directive-spec /
   null-directive-spec    

paragraph-directive-spec:
   directive-spec-intro paragraph-directive-spec-text ':' directive-spec-extro
link-directive-spec:
   directive-spec-intro link-directive-spec-text ':' directive-spec-extro
links-directive-spec:
   directive-spec-intro links-directive-spec-text ':' directive-spec-extro
word-directive-spec:
   directive-spec-intro word-directive-spec-text ':' directive-spec-extro
division-directive-spec:
   directive-spec-intro division-directive-spec-text ':' directive-spec-extro
indented-content-directive-spec:
   directive-spec-intro indented-content-directive-spec-text ':'
   directive-spec-extro
null-directive-spec:
   directive-spec-intro null-directive-spec-text ':' directive-spec-extro

directive-spec-intro:
   ascii-overline? ( SOL ascii-midline SPC+ )? SPC*
directive-spec-extro:
   SPC+ ( ascii-midline LS ascii-underline? )? / LS ascii-underline?

___________
  CONTENT

content-block: 
   blank-lines / marginal-code-block / marginal-verbatim-block /
   figure-ref-line / ditto-ref-line / api-list-ref-line / bracketed-raw-block /
   table / bullet-list / numeric-list / hyphenated-list / phrase-list /
   indented-content-directive / paragraph

blank-lines:
   ( SPC* LS )+

marginal-code-block:
   marginal-code-block-line+
marginal-code-block-line:
   SOL ':' SPC raw-line

marginal-verbatim-block:
   marginal-verbatim-block-line+
marginal-verbatim-block-line:
   SOL ( '>' / '|' ) SPC raw-line

figure-ref-line:
   SOL [-SPC "FIG" SPC-LS+ filename ( SPC-LS+ scale-factor )? SPC-] text-til-ls? LS
scale-factor:
   NUMBER ( '%' / 'X' )

ditto-ref-line:
   SOL [-SPC "DITTO" SPC-LS+ link-til-cls-brack SPC-] LS
api-list-ref-line:
   SOL [-SPC "LIST" SPC-LS+ "OF" SPC-LS+ api-list-spec-text
   ( SPC-LS+ "IN" SPC-LS+ word-til-cls-brack )? SPC-] LS

bracketed-raw-block:
   bracketed-raw-block-start-line
   ( !bracketed-raw-block-end-line raw-line )*
   bracketed-raw-block-end-line
bracketed-raw-block-start-line:
   SOL [-SPC bracketed-raw-block-spec-text SPC-] LS
bracketed-raw-block-end-line:
   INDENT-DEDENT SOL [-SPC "END" ( SPC-LS+ bracketed-raw-block-spec-text )? SPC-] LS

table:
   table-header table-row+ table-footer
table-header:
   ...
table-row:
   ...
table-footer:
   ...

_________
  LISTS

bullet-list:
   ( bullet-list-item blank-lines? )+
bullet-list-item:
   SOL bullet-list-marker remainder-and-indented-content
bullet-list-marker:
   bullet-char SPC+

numeric-list:
   numeric-list-first-item ( blank-lines? numeric-list-item )* blank-lines?
numeric-list-first-item:
   SOL numeric-list-first-marker remainder-and-indented-content
numeric-list-item:
   SOL numeric-list-marker remainder-and-indented-content
numeric-list-first-marker:
   ( NUMBER / ORDINAL ) ( ':' / ')' / '.' ) SPC+
numeric-list-marker:
   ( NUMBER / ORDINAL / '#' ) ( ':' / ')' / '.' ) SPC+

hyphenated-list:
   ( hyphenated-list-item blank-lines? )+
hyphenated-list-item:
   SOL hyphenated-list-label remainder-and-indented-content
hyphenated-list-label:
   markup-words-til-hyphen-spc hyphen-spc
hyphen-spc:
   '-' SPC+

phrase-list:
   ( phrase-list-item blank-lines? )+
phrase-list-item:
   SOL phrase-list-label indented-content  
phrase-list-label:
   paragraph-til-hyphen-ls hyphen-ls
hyphen-ls:
   '-' LS

______________
  PARAGRAPHS

paragraph-directive-content:
   INDENT paragraph DEDENT / paragraph-til-null-directive

paragraph:
   paragraph-line+
paragraph-til-null-directive:
   ( !null-directive-spec paragraph-line )+
paragraph-til-hyphen-ls:
   paragraph-line-til-hyphen-ls+

paragraph-line:
   !paragraph-break SOL markup-words LS
paragraph-line-til-hyphen-ls:
   !paragraph-break SOL ( !hyphen-ls markup-word SPC+ )+ ( &hyphen-ls / LS )
paragraph-break:
   blank-lines / bracketed-line / marginal-code-block / marginal-verbatim-block
bracketed-line:
   figure-ref-line / ditto-ref-line / bracketed-raw-block-start-line
  
_____________
  FRAGMENTS
 
raw-line:
   INDENT-DEDENT ( !raw-line-end CHAR )* raw-line-end
raw-line-end:
   line-marker? LS
line-marker:
   '[' SPC* ':' ( NUMBER / ORDINAL ) SPC* ']'

ascii-overline:
   SOL ascii-line LS
ascii-midline:
   ascii-line
ascii-underline:
   SOL ascii-line LS
ascii-line:
   ascii-line-char ascii-line-char ascii-line-char+

image-ref:
   [-SPC "IMG" SPC-LS+ filename ( SPC-LS+ text-til-cls-brack )? SPC-]
line-marker-ref:
   [-SPC ':' ( NUMBER / ORDINAL ) SPC-]
footnote-ref:
   [-SPC ( NUMBER / ORDINAL ) SPC-]
synopsis-ref:
   [-SPC "SYNOPSIS" SPC-LS+ "OF" SPC-LS+ link-til-cls-brack SPC-]

quote:
   quoted-words ( SPC-LS+ quote-spec )?
quoted-words:
   ( '(' / '[' )* quote-start text-til-end-quote? quote-end
   text-til-spc-ls?
quote-start:
   ''' / '"' / '`' / user-defined
quote-end:
   ''' / '"' / '`' / user-defined
quote-spec:
   [-SPC ( quote-spec-option SPC-LS* )+ link-til-cls-brack? SPC-]
quote-spec-option:
   quote-spec-option &( SPC-LS / ']' )
quote-spec-option-text:
   "CODE" / "TERM" / "API" / "BIB" / "SIC" / "UNQ" / "EM" / "QQ" / "QV" / "VI" / 
   "B" / "I" / "U" / "Q"

_________
  WORDS  

markup-words:
   ( markup-word SPC* )+
markup-words-til-hyphen-spc:
   ( !hyphen-spc markup-word SPC* )+
markup-word:
   quote / line-marker-ref / footnote-ref / image-ref / synopsis-ref /
   bracketed-render-span / text-word
title-word:
   quote / image-ref / bracketed-render-span / text-word
text-word:
   text-til-spc-ls
word-line:
   SOL text-word LS
word-til-cls-brack:
   text-til-spc-cls-brack

indented-link-words:
   INDENT link-word-lines DEDENT
link-word-lines:
   ( SOL link-words LS )+
link-words:
   link-word ( SPC+ link-word )*
link-word:
   quote-start text-til-end-quote quote-end / text-til-spc-ls
link-line:
   SOL quote-start text-til-end-quote quote-end LS / SOL text-til-ls LS
link-til-cls-brack:
   quote-start text-til-end-quote quote-end / text-til-cls-brack

filename:
   quote-start text-til-end-quote quote-end
nickname-word:
   text-til-cls-brack

text-til-ls:
   ( !LS CHAR )+
text-til-spc-ls:
   ( !SPC-LS CHAR )+
text-til-cls-brack:
   ( !SPC-] CHAR )+
text-til-spc-cls-brack:
   ( !SPC-LS !']' CHAR )+
text-til-end-quote:
   ( !quote-end CHAR )+
  
bracketed-render-span:
   bracketed-render-span-start
   ( !bracketed-render-span-end CHAR )*
   bracketed-render-span-end
bracketed-render-span-start:
   [-SPC bracketed-render-span-spec-text SPC-]
bracketed-render-span-end:
   [-SPC "END" ( SPC-LS+ bracketed-render-span-spec-text )? SPC-]

topic-directive-spec-text:
   "CONSTANT" / "FUNCTION" / "VARIABLE" / ( "GENERIC" ( SPC+ "FUNCTION" )? ) / 
   "LIBRARY" / "METHOD" / "MODULE" / "CLASS" / "MACRO" / "TOPIC"
section-directive-spec-text:
   "SECTION"
paragraph-directive-spec-text:
   "SYNOPSIS" / "SYN"
link-directive-spec-text:
   "PARENT" ( SPC+ "TOPIC" )?
links-directive-spec-text:
   "RELEVANT" SPC+ "TO" / "SEE" SPC+ "ALSO"
word-directive-spec-text:
   "FULLY" SPC+ "QUALIFIED" SPC+ "NAME"
division-directive-spec-text:
   "INIT-KEYWORDS" / "CONDITIONS" / "EXCEPTIONS" / "ARGUMENTS" / "KEYWORDS" /
   "SIGNALS" / "ERRORS" / "VALUES" / "ARGS" / ( "MAKE" SPC+ "KEYWORDS" ) /
   user-defined
indented-content-directive-spec-text:
   "WARNING" / "NOTE"

null-directive-spec-text:
   "DISCUSSION"
api-list-spec-text:
   "FUNCTIONS" / "LIBRARIES" / "VARIABLES" / "BINDINGS" / "CLASSES" / "MODULES" / 
   ( "UNBOUND" SPC+ "NAMES" ) / "MACROS"
bracketed-raw-block-spec-text:
   "VERBATIM" / "DIAGRAM" / "EXAMPLE" / "CODE"
bracketed-render-span-spec-text:
   "DITA" / "HTML"

ascii-line-char:
   '=' / '-' / ':' / '.' / '~' / '^' / '_' / '*' / '+' / '#' / user-defined
bullet-char:
   '-' / '*' / '+' / 'o' / user-defined

SPC-LS:
   SPC / LS
[-SPC:
   '[' SPC-LS*
SPC-]:
   SPC-LS* ']'

SOL:
   SPC*

INDENT-DEDENT:
   ( INDENT / DEDENT )*
