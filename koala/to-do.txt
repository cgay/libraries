koala
-----

* Search sources for "---*** TODO" and do them.

* Documentation.  Probably write it in DSP.

* A facility to generate .html files from .dsp files.  e.g., a way to
  flatten all the .dsp doc files into .html.

* Secure connections.  Have to finish implementing <ssl-tcp-server-socket>.

* Sessions - They should be able to work without cookies enabled, either
  by URL rewriting or ...?

* URL cleanups:
  - URLs should always begin with a / and the static file handler will
    have to remove it before calling merge-locators.  I think this is
    done.
  - Make sure that decode-url is used in all the right places to convert
    from %xx to appropriate characters.
  - Use 'url' everywhere instead of randomly using 'uri' and 'url'.
  - Should use 'path' in local variables to distinguish between the a URL
    (which contains a scheme etc) and just the path.
  - Use web locators instead of strings?  Not sure it would buy much.
    Look at parse-uri and parse-request-uri, which are presently unused.
  - Have a standard API for writing a URL to the output stream so that
    it can be used to automatically include the session-id etc.

* DSP
  - Provide an API for clearing the output stream contents.  JSP has this
    and it could be useful for error recovery.
  - Provide an analog to JSP's PageContext for a page-level namespace?
    This is basically just adding a few methods to the <page> class
    that allow you to set attributes and such.  And clearing the attrs
    after the request is completed?
  - Check what exactly are the rules for using prefix= in the taglib
    directive.  What happens when two directives use the same prefix?
    When the same taglib is included twice with different prefixes?
    Does shadowing work correctly when they use the same prefix?  i.e.,
    if two taglibs have the same tag and same prefix, is the one in the
    taglib that was included last used?

* Miscellaneous
  - Replace some uses of copy-sequence with substring.  They are probably
    hold-overs from when <substring> was causing problems.
  - Look carefully at which classes and methods should be opened before
    initial release.  Best way to do this might be to try and define a
    subclass of <dylan-server-page> outside the Koala library.
  - Actually, DSP should probably be defined to use the Koala library
    rather than being part of it.  It only needs public interfaces.

=========================================================================

koala-example
-------------

* Rearrange examples into a series of pages that show one thing per page
  and has a table of contents.
