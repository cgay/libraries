Fix before going live
---------------------

Anything that is a regression compared to the original wiki.

* The way news items are implemented (by adding a special tag) means
  that anyone can add a news item.  Probably just add a set of
  reserved tags in the config file.  (Reserved for admins, I guess.)
  Not worth generalizing the ACLs stuff to tags, I think.
* Convert the content in www.opendylan.org to wiki pages and make
  them only editable by the dylan-hackers group.
* Support group descriptions.
* Most of the items in the "Users" list below.
* Most of the items in the "Registration" list below.
* The methods on permanent-link are incorrect.  For example, if you go
  to the "connections" page via the "versions" page, all the connection
  page links are incorrect.  Maybe transform-uris is broken.  Maybe we
  should be using <web-locator>s instead.
* RSS or Atom feed working.
* Redirection from old view.dsp?title=foo to /pages/foo.  Bonus points
  for redirecting from specific revision numbers.
* Write all the hard-linked pages in the navigation bar (and the news items)
  in the old wiki so they're available immediately after conversion.  All
  we need to do after conversion is add the "opendylan.org news" tag.

General
-------
* MAKE THREAD SAFE -- basically anything like removing a user, which
  modifies multiple objects, may have race conditions.  Needs careful
  thought.
* Convert specialized tags to use <dsp:loop> and improve <dsp:loop>
  as needed.
* navigation.dsp should be able to include wiki pages so that it can
  be customizable on a per-site and/or per-user basis.
* i18n

Tags
----

* Overview page (hannes: what do you have in mind exactly?)
* Ability to browse all pages with a given set of tags.

Users
-----
* Don't store passwords in cleartext.
* If you get an error when creating a user (e.g., don't enter a password)
  the username isn't displayed on the followup page.
* Show the email address if the user him/herself is viewing the page.
* When an admin is editing a user, allow them to make the user an admin.
  (This is where the two levels of admin could come into play.)
* Support a full name attribute.
* Have a "home" wiki page for each user, similar to twiki.  Pre-create
  the page.  Maybe call it e.g. "User: Full Name".
* Allow user to set their timezone and date format, and show all times
  relative to that.
* Validate name, password, email.  Require a minimum level of
  security in passwords?  e.g., must not be empty, one char, all the
  same char, etc.  Maybe there's a cookbook for this.


Registration
------------
* Validate email addresses by sending to them and not enabling the
  account until verified.
* Should have its own page
* Should give error if no username entered
* Should leave you logged in
* Should put initial focus in password field

Groups
------
* Options menu offers edit/remove even if the user is not owner or admin.
* Remove group from any ACLs upon deletion, and display list of pages whos
  ACLs will be affected.  Bonus points: say whether removing the group will
  make it so that no one (other than an admin and the owner) has access to
  a page.
* Show "This group has no members" if true.
* Combine editing attributes and group members onto one page.  This requires
  javascript to do it right, i.e. not require a POST for each member change.

Pages
-----
* The "Pages" page, linked in the left margin, lists all pages.  It should
  list ~20 pages per page and put up "<< 1, 2, 3 ... n >>" links at the bottom.
  Or something.  It's a good excuse to develop a built-in mechanism for doing
  that in DSP.
* Conflict detection (multiple overlapping edits)
* improve display of tags.  maybe put to the right of the title.
* looks like page versions aren't quite correct yet.
  e.g., do they always show the latest tags?
* should be a way to include other pages inline.
* Allow owner or administrator to change page owner when editing page.
* When viewing a non-newest revision, the options menu items are incorrect.
  e.g., "edit" loads the newest revision's content.  Instead it should
  load the old content and give a warning near the Save button that you
  are editing an older revision.  "remove" probably shouldn't be there,
  and "connections" should show the connections of the older revision.

Other
-----

- search widget not implemented
  * advanced search
- tag cloud (what's this?)
- inline svg
  * connection graph
- microformats! (what's this?)
  * users
- menu for user
- hints in lists
- icon for groups
- icon for files
- renaming users/groups/pages
- atom feed
- file upload
- user page: edited pages
  * each page: list of versions
- page: authors
  * each user: list of versions  
- 304 (not modified)
  * compare request etag with page version timestamp
